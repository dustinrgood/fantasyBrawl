import { NextRequest, NextResponse } from 'next/server'
import { getPublicLeagues } from '@/lib/services/mockLeaguesService'
import { fetchFromYahooApi } from '@/lib/services/yahooSportsApi'

// Set to true to always use mock data (useful for development)
const ALWAYS_USE_MOCK = true

/**
 * API route to get public leagues
 * This will try to fetch from Yahoo Fantasy API first, and fall back to mock data if needed
 */
export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url)
    const sport = searchParams.get('sport') || undefined
    const teamSizesParam = searchParams.get('teamSizes')
    
    // Parse team sizes if provided
    const teamSizes = teamSizesParam 
      ? teamSizesParam.split(',').map(size => parseInt(size, 10))
      : undefined
    
    console.log('Public leagues request with params:', { sport, teamSizes })
    
    // Determine if we should use mock data
    let useMock = ALWAYS_USE_MOCK
    
    if (!useMock) {
      // Check if we can use the Yahoo API
      // Current conditions for using mock data:
      // 1. If we're in development and ALWAYS_USE_MOCK is true
      // 2. If it's currently the NFL offseason (Feb to Aug)
      // 3. If there's an error connecting to Yahoo API
      const currentMonth = new Date().getMonth() + 1 // 1-12 (Jan-Dec)
      const isOffseason = sport === 'football' && (currentMonth >= 2 && currentMonth <= 8)
      
      useMock = isOffseason
    }
    
    let leaguesData
    
    if (useMock) {
      console.log('Using mock leagues data')
      leaguesData = await getPublicLeagues(sport, teamSizes)
    } else {
      try {
        console.log('Attempting to fetch leagues from Yahoo API')
        // This would be replaced with actual Yahoo API call in production
        // For now, we'll just use mock data even in this branch
        
        // Example of how you might integrate with Yahoo:
        // const yahooData = await fetchFromYahooApi('/users;use_login=1/games;is_available=1/leagues')
        // leaguesData = processYahooLeaguesData(yahooData)
        
        // For development, use mock data anyway
        leaguesData = await getPublicLeagues(sport, teamSizes)
      } catch (yahooError) {
        console.error('Error fetching from Yahoo API, falling back to mock data:', yahooError)
        leaguesData = await getPublicLeagues(sport, teamSizes)
      }
    }
    
    return NextResponse.json({ 
      leagues: leaguesData,
      source: useMock ? 'mock' : 'yahoo'
    })
  } catch (error) {
    console.error('Error in public leagues API:', error)
    
    return NextResponse.json({
      error: 'Failed to fetch public leagues',
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 })
  }
}